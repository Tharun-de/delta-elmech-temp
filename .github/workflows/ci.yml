name: CI/CD Pipeline

on:
  push:
    branches: [ develop, staging, main ]
  pull_request:
    branches: [ develop, staging, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install Dependencies
      run: |
        cd frontend
        npm ci
        cd ../backend
        npm ci
    
    - name: Run Frontend Tests
      run: |
        cd frontend
        npm run test
        
    - name: Run Backend Tests
      run: |
        cd backend
        npm run test
        
    - name: Run ESLint
      run: |
        cd frontend
        npm run lint
        cd ../backend
        npm run lint

  deploy-staging:
    needs: test
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy Frontend to Vercel (Staging)
      run: |
        npm install --global vercel@latest
        vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        vercel build --token=${{ secrets.VERCEL_TOKEN }}
        vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
    
    - name: Deploy Backend to Railway (Staging)
      run: |
        npm install -g @railway/cli
        railway up --environment staging
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  deploy-production:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy Frontend to Vercel (Production)
      run: |
        npm install --global vercel@latest
        vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
    
    - name: Deploy Backend to Railway (Production)
      run: |
        npm install -g @railway/cli
        railway up
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
